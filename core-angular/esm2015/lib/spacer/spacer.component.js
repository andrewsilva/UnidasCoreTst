import { Component, Input } from '@angular/core';
import { SpacerSidesEnum } from './enum/spacer-sides.enum';
import { SpacerSizesEnum } from './enum/spacer-sizes.enum';
import { BaseComponent } from "../base.component";
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
const _c0 = ["*"];
export class SpacerComponent extends BaseComponent {
    constructor() {
        super('spacer');
        this.side = SpacerSidesEnum.BOTTOM;
        this.size = SpacerSizesEnum.MEDIUM;
    }
    get availableSizes() {
        return SpacerSizesEnum;
    }
    get availableSides() {
        return SpacerSidesEnum;
    }
    get spacerClasses() {
        return {
            [`${this.cssPrefix}`]: true,
            [`${this.appPrefix}-margin-top-xl`]: this.side == SpacerSidesEnum.TOP
                && this.size == SpacerSizesEnum.EXTRA_LARGE,
            [`${this.appPrefix}-margin-top-lg`]: this.side == SpacerSidesEnum.TOP
                && this.size == SpacerSizesEnum.LARGE,
            [`${this.appPrefix}-margin-top-md`]: this.side == SpacerSidesEnum.TOP
                && this.size == SpacerSizesEnum.MEDIUM,
            [`${this.appPrefix}-margin-top-sm`]: this.side == SpacerSidesEnum.TOP
                && this.size == SpacerSizesEnum.SMALL,
            [`${this.appPrefix}-margin-right-xl`]: this.side == SpacerSidesEnum.RIGHT
                && this.size == SpacerSizesEnum.EXTRA_LARGE,
            [`${this.appPrefix}-margin-right-lg`]: this.side == SpacerSidesEnum.RIGHT
                && this.size == SpacerSizesEnum.LARGE,
            [`${this.appPrefix}-margin-right-md`]: this.side == SpacerSidesEnum.RIGHT
                && this.size == SpacerSizesEnum.MEDIUM,
            [`${this.appPrefix}-margin-right-sm`]: this.side == SpacerSidesEnum.RIGHT
                && this.size == SpacerSizesEnum.SMALL,
            [`${this.appPrefix}-margin-bottom-xl`]: this.side == SpacerSidesEnum.BOTTOM
                && this.size == SpacerSizesEnum.EXTRA_LARGE,
            [`${this.appPrefix}-margin-bottom-lg`]: this.side == SpacerSidesEnum.BOTTOM
                && this.size == SpacerSizesEnum.LARGE,
            [`${this.appPrefix}-margin-bottom-md`]: this.side == SpacerSidesEnum.BOTTOM
                && this.size == SpacerSizesEnum.MEDIUM,
            [`${this.appPrefix}-margin-bottom-sm`]: this.side == SpacerSidesEnum.BOTTOM
                && this.size == SpacerSizesEnum.SMALL,
            [`${this.appPrefix}-margin-left-xl`]: this.side == SpacerSidesEnum.LEFT
                && this.size == SpacerSizesEnum.EXTRA_LARGE,
            [`${this.appPrefix}-margin-left-lg`]: this.side == SpacerSidesEnum.LEFT
                && this.size == SpacerSizesEnum.LARGE,
            [`${this.appPrefix}-margin-left-md`]: this.side == SpacerSidesEnum.LEFT
                && this.size == SpacerSizesEnum.MEDIUM,
            [`${this.appPrefix}-margin-left-sm`]: this.side == SpacerSidesEnum.LEFT
                && this.size == SpacerSizesEnum.SMALL,
        };
    }
}
SpacerComponent.ɵfac = function SpacerComponent_Factory(t) { return new (t || SpacerComponent)(); };
SpacerComponent.ɵcmp = i0.ɵɵdefineComponent({ type: SpacerComponent, selectors: [["und-spacer"]], inputs: { side: "side", size: "size" }, features: [i0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 2, vars: 1, consts: [[3, "ngClass"]], template: function SpacerComponent_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵprojectionDef();
        i0.ɵɵelementStart(0, "div", 0);
        i0.ɵɵprojection(1);
        i0.ɵɵelementEnd();
    } if (rf & 2) {
        i0.ɵɵproperty("ngClass", ctx.spacerClasses);
    } }, directives: [i1.NgClass], encapsulation: 2 });
/*@__PURE__*/ (function () { i0.ɵsetClassMetadata(SpacerComponent, [{
        type: Component,
        args: [{
                selector: 'und-spacer',
                templateUrl: './spacer.component.html',
            }]
    }], function () { return []; }, { side: [{
            type: Input,
            args: ['side']
        }], size: [{
            type: Input,
            args: ['size']
        }] }); })();
//# sourceMappingURL=data:application/json;base64,